# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Deploy

on:
  release:
    types: [published]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Get release version
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Get code version
      run: echo "STRIMZI_CLI_VERSION=$(grep 'version' setup.cfg | cut -d '=' -f 2 | xargs)" >> $GITHUB_ENV
    - name: Compare release and code version
      if: ${{ env.RELEASE_VERSION != env.STRIMZI_CLI_VERSION }}
      run: exit 1
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build
      run: |
        python setup.py sdist bdist_wheel
    - name: Publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*
      continue-on-error: true
    - name: Sleep for 3 mins
      uses: jakejarvis/wait-action@master
      with:
        time: '180s'
    - name: Bake and push image
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: ${{ secrets.QUAY_USERNAME }}
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.QUAY_PASSWORD }}
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: quay.io
        # Docker repository to tag the image with
        repository: systemcraftsman/strimzi-kafka-cli
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: latest,${{ env.STRIMZI_CLI_VERSION }}
        # Path to the build context
        path: .
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        dockerfile: ./Dockerfile
        # Whether to push the image
        push: true
